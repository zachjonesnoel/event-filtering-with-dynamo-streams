AWSTemplateFormatVersion: 2010-09-09
Description: event-filtering
Transform:
- AWS::Serverless-2016-10-31
Parameters:
  ToEmail:
    Type: String
    Description: Enter the email address which receives emails
  FromEmail:
    Type: String
    Description: Enter the email address which sends emails (SES email identity/domain
      needs to be verified)
Resources:
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DynamoDBTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: DynamoDBTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
      CodeUri: getAllItemsFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DynamoDBTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: DynamoDBTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
      CodeUri: getByIdFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DynamoDBTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: DynamoDBTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
      CodeUri: putItemFunction
  putItemTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/dynamodb-insert-trigger.putItemTriggerHandler
      Runtime: nodejs14.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: DynamoDB put event trigger.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: DynamoDBTable
      Environment:
        Variables:
          TO_EMAIL:
            Ref: ToEmail
          FROM_EMAIL:
            Ref: FromEmail
      Events:
        DynamoDBTable:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - DynamoDBTable
              - StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 100
            FilterCriteria:
              Filters:
              - Pattern: '{"eventName": ["INSERT"],"dynamodb":{"NewImage":{"item_type":{"S":
                  [ "THREAT" ]}}}}'
      CodeUri: putItemTriggerFunction
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
